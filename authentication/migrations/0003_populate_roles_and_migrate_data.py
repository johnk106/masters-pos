# Generated by Django 5.1.3 on 2025-07-17 10:57

from django.db import migrations


def populate_roles_and_migrate_data(apps, schema_editor):
    Role = apps.get_model('authentication', 'Role')
    UserProfile = apps.get_model('authentication', 'UserProfile')
    
    # Create default roles
    default_roles = [
        ('Admin', 'System Administrator with full access'),
        ('Manager', 'Manager with supervisory access'),
        ('Salesman', 'Sales representative with limited access'),
        ('Supervisor', 'Supervisor with team management access'),
        ('Store Keeper', 'Store keeper with inventory access'),
        ('Inventory Manager', 'Inventory manager with full inventory access')
    ]
    
    role_objects = {}
    for role_name, description in default_roles:
        role_obj, created = Role.objects.get_or_create(
            name=role_name,
            defaults={'description': description, 'is_active': True}
        )
        role_objects[role_name] = role_obj
    
    # Migrate existing user profiles
    for profile in UserProfile.objects.all():
        old_role = profile.role  # This is the CharField value
        if old_role and old_role in role_objects:
            profile.new_role = role_objects[old_role]
            profile.save()


def reverse_migration(apps, schema_editor):
    # Reverse the migration by copying new_role back to role
    UserProfile = apps.get_model('authentication', 'UserProfile')
    
    for profile in UserProfile.objects.all():
        if profile.new_role:
            profile.role = profile.new_role.name
            profile.save()


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0002_add_role_model'),
    ]

    operations = [
        migrations.RunPython(populate_roles_and_migrate_data, reverse_migration),
    ]